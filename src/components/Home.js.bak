import React from "react";
import PropTypes from "prop-types";

export class Home extends React.Component {
	constructor(props) {
		super();
		this.state = {
			age: props.initialAge,
			status: 0,
			homeLink: props.initialLinkName
		};
		setTimeout(() => {
			this.setState({
				status: 1
			});
		}, 3000);
		console.log("Debug: Home -> constructor -> props", props);
	}

	componentWillMount() {
		var d = 1;
		console.log("Debug: Home -> componentWillMount -> d", d);
	}

	componentDidMount() {
		var d = 1;
		console.log("Debug: Home -> componentDidMount -> d", d);
	}

	componentWillReceiveProps(nextProps) {
		console.log(
			"Debug: Home -> componentWillReceiveProps -> nextProps",
			nextProps
		);
	}

	shouldComponentUpdate(nextProps, nextStates) {
		console.log(
			"Debug: Home -> shouldComponentUpdate -> nextProps, nextStates",
			nextProps,
			nextStates
		);
		// if (nextStates.status === 1) {
		// 	return false;
		// }
		return true;
	}

	componentWillUpdate(nextProps, nextStates) {
		console.log(
			"Debug: Home -> componentWillUpdate -> nextProps, nextStates",
			nextProps,
			nextStates
		);
	}

	componentDidUpdate(prevProps, prevStates) {
		console.log(
			"Debug: Home -> componentDidUpdate -> prevProps, prevStates",
			prevProps,
			prevStates
		);
	}

	componentWillUnmount() {
		var d = 1;
		console.log("Debug: Home -> componentWillUnmount -> d", d);
	}

	onMakeOlder() {
		this.setState({
			age: this.state.age + 3
		});
	}

	onChangeLink() {
		this.props.changeLink(this.state.homeLink);
	}

	onHandleChange(event) {
		this.setState({ homeLink: event.target.value });
	}

	render() {
		return (
			<div>
				<p>In a new component!</p>
				<p>
					Your name is {this.props.name}, your age is {this.state.age}
				</p>
				<p>Status: {this.state.status}</p>
				<hr />
				<button onClick={() => this.onMakeOlder()} className='btn btn-primary'>
					Make me older!
				</button>
				<hr />
				<button onClick={this.props.greet} className='btn btn-primary'>
					Greet
				</button>
				<hr />
				<input
					type='text'
					value={this.state.homeLink}
					onChange={event => this.onHandleChange(event)}
				/>
				<button
					onClick={this.onChangeLink.bind(this)}
					className='btn btn-primary'>
					Change Header Link
				</button>
			</div>
		);
	}
}

Home.propTypes = {
	name: PropTypes.string,
	initialAge: PropTypes.number,
	greet: PropTypes.func,
	initialLinkName: PropTypes.string
};
